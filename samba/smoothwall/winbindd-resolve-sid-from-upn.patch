Author: Harry Mason <harry.mason@smoothwall.net>
Description: Allow winbind to resolve a SID from a user principal name
 winbindd_lookupname_send() processes the query sent by
 wbinfo --name-to-sid. This is used by auth to canonicalise
 usernames. The end result of this call is an RPC call to
 the DC of lsa_LookupNames4. This call is documented at
 https://msdn.microsoft.com/en-us/library/cc234492.aspx
 .
 This call permits usernames in several forms. A qualified
 username such as SHORTNAME\user or DNS.NAME\user is resolved
 via sAMAccountName in the given domain. A short name may
 search across a forest in some cases, but will also use only
 the sAMAccountName. A user principal name such as
 user@principal.name will search the userPrincipalName field
 but will search the entire forest, and fail in the case of
 multiple matches. An "implicit user principal name" is also
 supported, of the form sAMAccountName@dns.name. Note that
 the implicit UPN is the one used in Kerberos tickets.
 .
 There is no requirement for an account's userPrincipalName
 prefix and sAMAccountName to be identical. If the provided
 username is a user principal name, it is incorrect to
 transform it into a NetBIOS style username, because that will
 search the wrong field and may also specify an invalid domain.
 .
 Therefore this patch changes the behaviour so that if the
 username is in user principal name form, do not transform it.
 .
 It seems that 40102ad546c1bb3d9627df786d884fd0ca026ac2 in
 upstream implements client support for user principal names
 in wbinfo --name-to-sid, relying on behaviour in winbindd
 which gets broken in subsequent commit
 b180fe34a71a595d0dea8e72877149361b531e02.
 .
 source3/winbindd/winbindd_util.c:parse_domain_user() contains
 the same apparently broken logic. However, we never use this
 code path because we don't use PAM or idmap. The only cases
 where parse usernames are wbinfo --name-to-sid or ntlm_auth,
 and both have their own implementation which do it right:
 source3/utils/ntlm_auth.c:parse_ntlm_auth_domain_user() and
 nsswitch/wbinfo.c:parse_wbinfo_domain_user().
--- a/source3/winbindd/winbindd_lookupname.c
+++ b/source3/winbindd/winbindd_lookupname.c
@@ -57,8 +57,7 @@
 		name = p+1;
 	} else if ((p = strchr(request->data.name.name, '@')) != NULL) {
 		/* upn */
-		domname = p + 1;
-		*p = 0;
+		domname = "";
 		name = request->data.name.name;
 	} else {
 		domname = request->data.name.dom_name;
