From 6d41ac8a8d9bc7bfda0f3afa907b922fd51daecd Mon Sep 17 00:00:00 2001
From: Bastian Blank <bastian.blank@credativ.de>
Date: Wed, 4 Jan 2017 18:07:20 +0100
Subject: Fix filesystem detection

Use blkid to detect filesystem information.  Don't longer use sfdisk to
change partition type.

Patch-Name: resourcedisk-filesystem.patch
---
 azurelinuxagent/common/utils/shellutil.py      |  2 +-
 azurelinuxagent/daemon/resourcedisk/default.py | 47 +++++---------------------
 2 files changed, 9 insertions(+), 40 deletions(-)

diff --git a/azurelinuxagent/common/utils/shellutil.py b/azurelinuxagent/common/utils/shellutil.py
index d273c92..8a2871f 100644
--- a/azurelinuxagent/common/utils/shellutil.py
+++ b/azurelinuxagent/common/utils/shellutil.py
@@ -74,7 +74,7 @@ def run_get_output(cmd, chk_err=True, log_cmd=True):
     if log_cmd:
         logger.verbose(u"run cmd '{0}'", cmd)
     try:
-        output=subprocess.check_output(cmd,stderr=subprocess.STDOUT,shell=True)
+        output=subprocess.check_output(cmd,shell=True)
         output = ustr(output, encoding='utf-8', errors="backslashreplace")
     except subprocess.CalledProcessError as e :
         output = ustr(e.output, encoding='utf-8', errors="backslashreplace")
diff --git a/azurelinuxagent/daemon/resourcedisk/default.py b/azurelinuxagent/daemon/resourcedisk/default.py
index 18ce884..861287c 100644
--- a/azurelinuxagent/daemon/resourcedisk/default.py
+++ b/azurelinuxagent/daemon/resourcedisk/default.py
@@ -17,6 +17,7 @@
 
 import os
 import re
+import subprocess
 import sys
 import threading
 import azurelinuxagent.common.logger as logger
@@ -101,7 +102,7 @@ class ResourceDiskHandler(object):
 
         fileutil.mkdir(mount_point, mode=0o755)
         logger.info("Examining partition table")
-        ret = shellutil.run_get_output("parted {0} print".format(device))
+        ret = shellutil.run_get_output("blkid -o value -s PTTYPE {0}".format(device))
         if ret[0]:
             raise ResourceDiskError("Could not determine partition info for "
                                     "{0}: {1}".format(device, ret[1]))
@@ -111,8 +112,9 @@ class ResourceDiskHandler(object):
             force_option = 'f'
         mkfs_string = "mkfs.{0} {1} -{2}".format(self.fs, partition, force_option)
 
-        if "gpt" in ret[1]:
+        if ret[1].strip() == "gpt":
             logger.info("GPT detected, finding partitions")
+            ret = shellutil.run_get_output("parted {0} print".format(device))
             parts = [x for x in ret[1].split("\n") if
                      re.match("^\s*[0-9]+", x)]
             logger.info("Found {0} GPT partition(s).", len(parts))
@@ -129,16 +131,13 @@ class ResourceDiskHandler(object):
                 shellutil.run(mkfs_string)
         else:
             logger.info("GPT not detected, determining filesystem")
-            ret = self.change_partition_type(suppress_message=True, option_str="{0} 1".format(device))
-            ptype = ret[1].strip()
-            if ptype == "7" and self.fs != "ntfs":
+            ret = shellutil.run_get_output("blkid -o value -s TYPE {0}".format(partition))
+            if ret[1].strip() == 'ntfs' and self.fs != 'ntfs':
                 logger.info("The partition is formatted with ntfs, updating "
                             "partition type to 83")
-                self.change_partition_type(suppress_message=False, option_str="{0} 1 83".format(device))
+                subprocess.call(['sfdisk', '-c', '-f', device, '1', '83'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
                 logger.info("Format partition [{0}]", mkfs_string)
                 shellutil.run(mkfs_string)
-            else:
-                logger.info("The partition type is {0}", ptype)
 
         mount_options = conf.get_resourcedisk_mountoptions()
         mount_string = self.get_mount_string(mount_options,
@@ -154,9 +153,7 @@ class ResourceDiskHandler(object):
             # the partition and try mounting.
             logger.warn("Failed to mount resource disk. "
                         "Retry mounting after re-reading partition info.")
-            if shellutil.run("sfdisk -R {0}".format(device), chk_err=False):
-                shellutil.run("blockdev --rereadpt {0}".format(device),
-                              chk_err=False)
+            shellutil.run("blockdev --rereadpt {0}".format(device), chk_err=False)
             ret = shellutil.run(mount_string, chk_err=False)
             if ret:
                 logger.warn("Failed to mount resource disk. "
@@ -174,34 +171,6 @@ class ResourceDiskHandler(object):
                     self.fs)
         return mount_point
 
-    def change_partition_type(self, suppress_message, option_str):
-        """
-            use sfdisk to change partition type.
-            First try with --part-type; if fails, fall back to -c
-        """
-
-        command_to_use = '--part-type'
-        input = "sfdisk {0} {1} {2}".format(command_to_use, '-f' if suppress_message else '', option_str)
-        err_code, output = shellutil.run_get_output(input, chk_err=False, log_cmd=True)
-
-        # fall back to -c
-        if err_code != 0:
-            logger.info("sfdisk with --part-type failed [{0}], retrying with -c", err_code)
-            command_to_use = '-c'
-            input = "sfdisk {0} {1} {2}".format(command_to_use, '-f' if suppress_message else '', option_str)
-            err_code, output = shellutil.run_get_output(input, log_cmd=True)
-
-        if err_code == 0:
-            logger.info('{0} succeeded',
-                        input)
-        else:
-            logger.error('{0} failed [{1}: {2}]',
-                         input,
-                         err_code,
-                         output)
-
-        return err_code, output
-
     @staticmethod
     def get_mount_string(mount_options, partition, mount_point):
         if mount_options is not None:
