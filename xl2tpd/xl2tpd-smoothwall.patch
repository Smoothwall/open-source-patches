--- a/l2tp.h
+++ b/l2tp.h
@@ -37,14 +37,14 @@
 #include "common.h"
 #include "ipsecmast.h"
 
-#define CONTROL_PIPE "/var/run/xl2tpd/l2tp-control"
+#define CONTROL_PIPE "/var/run/l2tp-control"
 #define CONTROL_PIPE_MESSAGE_SIZE 1024
 
 #define BINARY "xl2tpd"
 #define SERVER_VERSION "xl2tpd-1.3.1"
 #define VENDOR_NAME "xelerance.com"
 #ifndef PPPD
-#define PPPD		"/usr/sbin/pppd"
+#define PPPD		"/modules/tunnel/usr/sbin/l2tppppd"
 #endif
 #define CALL_PPP_OPTS "defaultroute"
 #define FIRMWARE_REV	0x0690  /* Revision of our firmware (software, in this case) */
@@ -94,7 +94,7 @@
                                    so we can "decompress" the
                                    payloads and simplify coding */
 #if 1
-#define DEFAULT_MAX_RETRIES 5    /* Recommended value from spec */
+#define DEFAULT_MAX_RETRIES 32    /* Recommended value from spec */
 #else
 #define DEFAULT_MAX_RETRIES 95   /* give us more time to debug */
 #endif
--- a/xl2tpd.c
+++ b/xl2tpd.c
@@ -357,6 +357,11 @@
     struct call *sc;
     struct tunnel *st;
 
+    char pid_name[ STRLEN ];
+    char unit_command[ STRLEN ];
+
+    snprintf( unit_command, sizeof( unit_command ), "unit" );
+    
     p = opts;
     stropt[0] = strdup (PPPD);
     while (p)
@@ -505,6 +510,16 @@
         /* close the control pipe fd */
         close (control_fd);
 
+        /* Rename the connection using "Unit" */
+        /* prefix a "9" to the front of the ppp name, i.e. ppp9" then add the PID */
+        /* which should allow this to be unique */
+
+        snprintf( pid_name, sizeof( pid_name ), "9%d", (int) getpid());
+
+        stropt[ pos++ ] = unit_command;
+        stropt[ pos++ ] = pid_name;
+        stropt[ pos ] = NULL;
+	
         if( c->dialing[0] )
         {
             setenv( "CALLER_ID", c->dialing, 1 );
@@ -1451,7 +1466,7 @@
     pid = setsid();
 
     unlink(gconfig.pidfile);
-    if ((i = open (gconfig.pidfile, O_WRONLY | O_CREAT, 0640)) >= 0) {
+    if ((i = open (gconfig.pidfile, O_WRONLY | O_CREAT, 0644)) >= 0) {
         snprintf (buf, sizeof(buf), "%d\n", (int)getpid());
         if (-1 == write (i, buf, strlen(buf)))
         {
